<div id="map_canvas" style="height: 400px"></div>
<?php $store = $this->getStoreDetail();?>
<?php $apiKey = $this->getApiKey();?>
<script>
    require([
        'jquery',
        'http://maps.googleapis.com/maps/api/js?sensor=false&key=<?php echo $apiKey?>'
    ], function($) {
        var map;
        var geocoder;
        var mapOptions = { center: new google.maps.LatLng(0.0, 0.0), zoom: 2,
            mapTypeId: google.maps.MapTypeId.ROADMAP };
        function initialize() {
            var latitude = 42.342305278572816;
            var longitude = -71.048583984375;
			<?php if ($store) :?>
				latitude = "<?php echo $store->getLatitude()?>";
				longitude = "<?php echo $store->getLongitude()?>";
			<?php endif;?>
            var myOptions = {
                center: new google.maps.LatLng(latitude, longitude ),
                zoom: 8,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            geocoder = new google.maps.Geocoder();
            var map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
            var marker;
            <?php if ($store) :?>
            var myCenter = new google.maps.LatLng(<?php echo $store->getLatitude()?>,
                <?php echo $store->getLongitude()?>);
            marker = new google.maps.Marker({
                position:myCenter
            });

            marker.setMap(map);
            getInfowindow(myCenter,marker);
            <?php endif;?>
            google.maps.event.addListener(map, 'click', function(event) {
                placeMarker(event.latLng);
            });
            google.maps.event.addListener(map, 'zoom_changed', function() {
                var z = map.getZoom();
            });
            var contentString;
            var infowindow = new google.maps.InfoWindow({
                content: contentString
            });
            function placeMarker(location) {
                infowindow.close();
                if(marker){
                    marker.setPosition(location);
                }else{
                    marker = new google.maps.Marker({
                        position: location,
                        map: map
                    });
                }
                $('[name="latitude"]').val(location.lat());
                $('[name="longitude"]').val(location.lng());
                getAddress(location);
                getInfowindow(location,marker);
            }

            function getInfowindow(location,marker) {
                geocoder.geocode( {'latLng': location},
                    function(results, status) {
                        if(status == google.maps.GeocoderStatus.OK) {
                            if(results[0]) {
                                contentString = results[0].formatted_address;
                            }
                        }
                    });
                marker.addListener('click', function() {
                    infowindow.setContent(contentString);
                    infowindow.open(map, marker);
                });
            }
            var componentForm = {
                street_number: 'long_name',
                route: 'long_name',
                locality: 'long_name',
                sublocality_level_1: 'long_name',
                administrative_area_level_1: 'long_name',
                country: 'short_name',
                postal_code: 'long_name'
            };
            var addressDetail = {};
            function getAddress(latLng) {
                geocoder.geocode( {'latLng': latLng},
                    function(results, status) {
                        if(status == google.maps.GeocoderStatus.OK) {
                            if(results[0]) {
                                for (var i = 0; i < results[0].address_components.length; i++) {
                                    var addressType = results[0].address_components[i].types[0];
                                    if (componentForm[addressType]) {
                                        addressDetail[addressType] = results[0].address_components[i][componentForm[addressType]];
                                    }
                                }
                                if('street_number' in addressDetail){
                                    $('[name="address"]').val(addressDetail.street_number+' '+addressDetail.route);
                                } else {
                                    $('[name="address"]').val(addressDetail.route);
                                }
                                $('[name="city"]').val(addressDetail.locality);
                                $('[name="zipcode"]').val(addressDetail.postal_code);
								var currentCountry = $('[name="country"]').val();
                                $('[name="country"]').val(addressDetail.country);
								getRegion(currentCountry, addressDetail.country);
                            }
                            else {
                                $('[name="address"]').val("No results");
                            }
                        }
                        else {
                            $('[name="address"]').val(status);
                        }
                    });
            }
			function getRegion(currentCountry, country){
				if(currentCountry!=country){
					$.ajax({
					   url : '<?php echo $block->getUrl("storepickup/lists/regionlist")?>'+'country/' +  country,
						type: 'get',
						dataType: 'json',
					   showLoader:true,
					   success: function(data){
						   if(data.htmlconent==''){
								$('.address-state-id').empty();
								$('.field-state_id').css('display', 'none');
								$('.field-state').css('display', 'block');
								$('.field-state').addClass('_required required');
								$('.address-state').addClass('required-entry _required');
								$('.field-state_id').removeClass('_required required');
								$('.address-state-id').removeClass('required-entry _required');
						   }else{
								$('.address-state-id').empty();
								$('.address-state-id').append(data.htmlconent);
								$('.field-state_id ').css('display', 'block');
								$('.address-state').attr('value','');
								$('.field-state').css('display', 'none');
								$('.field-state').removeClass('_required required');
								$('.address-state').removeClass('required-entry _required');
								$('.field-state_id').addClass('_required required');
								$('.address-state-id').addClass('required-entry _required');
						   }
						   fillState();
					   }
					});
				}else{
					fillState();
				}
		   }
		   
		   function fillState(){
				if($('[name="state"]').is(":visible")){
					$('[name="state"]').val(addressDetail.administrative_area_level_1);
				}
				if($('[name="state_id"]').is(":visible")){
					$('[name="state_id"]').val(addressDetail.administrative_area_level_1);
				}
		   }
        }
        google.maps.event.addDomListener(window, 'load', initialize);
    });
</script>